#set ($language="Groovy")
#set ($description="Bootstrap class")
#set ($author="Evol Johnson")
#set ($overwrite="true")
#set ($filename="${outputDir}/${project.name}/grails-app/conf/BootStrap.groovy")

import grails.converters.JSON;

import $packageName.*;
#foreach($package in $project.packageNames)
import $package.*;
#end

import org.codehaus.groovy.grails.plugins.springsecurity.ui.*;

class BootStrap {
    def springSecurityService;
    def init = { servletContext ->
		      
#foreach( $entity in $entities)	
#if(${entity.checkForAnnotation("Generate")})
${entity.name}.metaClass.toString = {  ->
	def toString = "";
	#foreach( $attribute in $entity.attributesForAnnotation("ShowInCombo"))
	if(${attribute.name}){
	#if($cont > 0)
	toString +=" "
	#end
	toString += ${attribute.name}.toString();
	}
	#set($cont = $cont+1)
	#end
	
	return toString;
};
#end
#end

#foreach( $entity in $entities)	
#if(${entity.checkForAnnotation("Generate")})	
JSON.registerObjectMarshaller(${entity.name}) {
	def returnArray = [:]
	//returnArray['class_'] = it.class
	#foreach( $attribute in $entity.attributes)
	#if(${attribute.getDomain()})
		if(it.${attribute.name}){
			def domainArray = [:]
			domainArray['id']=it.${attribute.name}.id;
			domainArray['toString']=it.${attribute.name}.toString();
			returnArray['${attribute.name}'] = domainArray;
		}
	#else
	if(it.${attribute.name}){
			returnArray['${attribute.name}'] = it.${attribute.name}
		}
	#end
	#end

	returnArray['toString'] = it.toString();
	return returnArray
	}
#end
#end
 }
    def destroy = {
    }
}
